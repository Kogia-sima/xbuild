#!/bin/bash

TARGET_VERSION=$1
LOCATION=$2

if [ "x"$TARGET_VERSION = "x-h" -o "x"$TARGET_VERSION = "x--help" -o "x"$LOCATION = "x" ]; then
    echo "[usage] ruby-install VERSION LOCATION"
    echo "  ex: ruby-install 1.9.3-p392 ~/local/ruby-1.9.3"
    exit 0
fi

cd $(dirname $0)
XBUILD_PATH=$(pwd)

mkdir -p var
oldcheck=$(find var -name "ruby-build.date" -mtime 1)
if [ ! -f ./var/ruby-build.date -o "x"$oldcheck != "x" ]; then
    (
        echo "cloning latest ruby-build."
        set -e
        cd var
        [ -d ./ruby-build ] && rm -rf ruby-build-repo ruby-build ruby-build.date
        git clone -q git://github.com/sstephenson/ruby-build.git ruby-build-repo
        touch ruby-build.date
        cd ruby-build-repo
        PREFIX=$XBUILD_PATH/var/ruby-build ./install.sh >/dev/null 2>&1
    ) || (echo "failed to download ruby-build" && exit 1)
fi
rm -f ./var/.24hours

echo "Start to build ruby $TARGET_VERSION ..."
./var/ruby-build/bin/ruby-build $TARGET_VERSION $LOCATION > /tmp/$USER-ruby-install.log 2>&1
RETVAL=$?
if [ $RETVAL != 0 ]; then
    echo "ruby-build failed. see log: /tmp/$USER-ruby-install.log"
    exit 1
fi

(
    export PATH=$LOCATION/bin:$PATH
    $LOCATION/bin/gem install --no-rdoc --no-ri bundler pry > /tmp/$USER-ruby-install-bundler.log 2>&1
) || (echo "gem install failed. see log /tmp/$USER-ruby-install-bundler.log" && exit 2)

echo "ruby $TARGET_VERSION successfully installed on $LOCATION"
echo "To use this ruby, do 'export PATH=$LOCATION/bin:\$PATH'."
